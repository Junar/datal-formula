<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="

       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
    default-init-method="init">


    <!-- the Singletons -->



    <bean id="runtimeBeanConfigurator" class="com.junar.RuntimeBeanConfigurator" />



    <bean id="defaultLocale" class="java.util.Locale">

        <constructor-arg index="0" value="en"></constructor-arg>

        <constructor-arg index="1" value="us"></constructor-arg>

    </bean>
    
    <bean id="defaultNumberFormat" class="com.junar.NumberFormat">
        <constructor-arg index="0" ref="defaultLocale"></constructor-arg>
        <constructor-arg index="1" value="###,###,##0.00"></constructor-arg>      
        <constructor-arg index="2" value="."></constructor-arg>
        <constructor-arg index="3" value=","></constructor-arg>
    </bean>
    
    <bean id="defaultDateFormat" class="com.junar.DateFormat">
        <constructor-arg index="0" ref="defaultLocale"></constructor-arg>
        <constructor-arg index="1" value="MM/dd/yyyy"></constructor-arg>     
    </bean>
    
    <!-- the DataSources -->

     

    <bean id="dataSource" destroy-method="close"

        class="org.apache.commons.dbcp.BasicDataSource">

        <property name="driverClassName" value="com.mysql.jdbc.Driver" />

        <property name="url" value="${jdbc.url}" />

        <property name="username" value="${jdbc.username}" />

        <property name="password" value="${jdbc.password}" />

        <property name="initialSize" value="${jdbc.cache.initialsize}" />

        <property name="maxActive" value="${jdbc.cache.maxactive}" />

        <property name="maxIdle" value="${jdbc.cache.maxidle}" />

        <property name="maxWait" value="${jdbc.cache.maxwait}" />

    </bean>
    
    <bean id="S3"
       abstract="true"
       class="com.junar.integration.S3">
       <property name="awsAccessKey" value="${s3.accesskey}" />
       <property name="awsSecretKey" value="${s3.secretkey}" />
       <property name="urlTTL" value="${datasets.urlTTL}" />
    </bean> 
    
    <bean id="SFTP"
       abstract="true"
       class="com.junar.integration.FTP">
       <property name="baseUrl" value="${sftp.baseUrl}" />
       <property name="sessionFactory" ref="sftpSessionFactory" />
    </bean> 
    
    <bean id="fileStorage"
       parent="{% if pillar['datastore']['use'] == 'sftp' %}SFTP{% else %}S3{% endif %}">
       <property name="bucketName" value="${datasets.bucketname}" /> 
    </bean>    
    
    <bean id="tempStorage"
       parent="{% if pillar['datastore']['use'] == 'sftp' %}SFTP{% else %}S3{% endif %}">
       <property name="bucketName" value="${temporary.bucketname}" /> 
    </bean>  
    
    <!-- the DAOs -->
    
    <bean id="dataSetDAO" class="com.junar.daos.DBDataSetDAO"
        scope="prototype">
        <property name="dataSource" ref="dataSource" />
    </bean>    
    
	   <bean id="endPointStateDAO" 
	       class="com.junar.daos.RedisEndPointStateDAO"
	       scope="prototype">
	       <property name="readOnlyCache" ref="redisEndPointStateCache_RO" />
	       <property name="readWriteCache" ref="redisEndPointStateCache_RW" />       
	   </bean>
	    
	   <bean id="dataSourceDataDAO" 
	       class="com.junar.daos.RedisDataSourceDAO"
	       scope="prototype">
	       <property name="readOnlyCache" ref="redisDataSourceDataCache_RO" />
	       <property name="readWriteCache" ref="redisDataSourceDataCache_RW" />
        <!-- <property name="dataSourceWriteRequestsQueue" ref="dataSourceWriteRequestsQueue" /> -->	              
	   </bean>   	         
    

    <!-- the Exceptions -->



    <bean id="dispatchCommand" class="com.junar.exceptions.DispatchCommandException"

        scope="prototype">

        <property name="localizedMessage"

            value="It was not possible to dispatch the request." />
        <property name="num" value="500" />

    </bean>



    <bean id="dispatcherNotFound"

        class="com.junar.exceptions.DispatcherNotFoundException"

        scope="prototype">

        <property name="localizedMessage"

            value="The dispatcher was not found." />
    </bean>
    
    <bean id="endPointNotModified"
        class="com.junar.exceptions.EndPointNotModified"
        scope="prototype">
        <property name="localizedMessage"
            value="End point was not modified since last request." />
    </bean>    



    <bean id="createDispatcher" class="com.junar.exceptions.CreateDispatcherException"

        scope="prototype">

        <property name="localizedMessage"

            value="Error creating dispatcher." />
    </bean>
    
    <!-- the workers -->    
    
    <bean id="daemonsFactory" abstract="true" destroy-method="shutdown"> 
        <constructor-arg index="0" value="${system.processors}"></constructor-arg>  
    </bean>      
 
</beans>
